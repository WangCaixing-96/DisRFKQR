// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// dis_grad
arma::vec dis_grad(arma::mat phi_x, arma::vec Y, arma::vec theta, double lambda, double tau, int S, int M);
RcppExport SEXP _DisRFKQR_dis_grad(SEXP phi_xSEXP, SEXP YSEXP, SEXP thetaSEXP, SEXP lambdaSEXP, SEXP tauSEXP, SEXP SSEXP, SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type phi_x(phi_xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< int >::type S(SSEXP);
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(dis_grad(phi_x, Y, theta, lambda, tau, S, M));
    return rcpp_result_gen;
END_RCPP
}
// ADMM
arma::mat ADMM(arma::mat phi_x, arma::vec Y, arma::vec grad_dif, arma::vec r_0, arma::vec u_0, double lambda, double tau, int beta, int S, int max_iter);
RcppExport SEXP _DisRFKQR_ADMM(SEXP phi_xSEXP, SEXP YSEXP, SEXP grad_difSEXP, SEXP r_0SEXP, SEXP u_0SEXP, SEXP lambdaSEXP, SEXP tauSEXP, SEXP betaSEXP, SEXP SSEXP, SEXP max_iterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type phi_x(phi_xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type grad_dif(grad_difSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type r_0(r_0SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type u_0(u_0SEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< int >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< int >::type S(SSEXP);
    Rcpp::traits::input_parameter< int >::type max_iter(max_iterSEXP);
    rcpp_result_gen = Rcpp::wrap(ADMM(phi_x, Y, grad_dif, r_0, u_0, lambda, tau, beta, S, max_iter));
    return rcpp_result_gen;
END_RCPP
}
// DKQR_RF
arma::mat DKQR_RF(arma::mat phi_x, arma::vec Y, arma::vec r_0, arma::vec u_0, double lambda, double tau, int M, int beta, int S, int max_iter_admm, int max_iter_dis);
RcppExport SEXP _DisRFKQR_DKQR_RF(SEXP phi_xSEXP, SEXP YSEXP, SEXP r_0SEXP, SEXP u_0SEXP, SEXP lambdaSEXP, SEXP tauSEXP, SEXP MSEXP, SEXP betaSEXP, SEXP SSEXP, SEXP max_iter_admmSEXP, SEXP max_iter_disSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type phi_x(phi_xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type r_0(r_0SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type u_0(u_0SEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    Rcpp::traits::input_parameter< int >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< int >::type S(SSEXP);
    Rcpp::traits::input_parameter< int >::type max_iter_admm(max_iter_admmSEXP);
    Rcpp::traits::input_parameter< int >::type max_iter_dis(max_iter_disSEXP);
    rcpp_result_gen = Rcpp::wrap(DKQR_RF(phi_x, Y, r_0, u_0, lambda, tau, M, beta, S, max_iter_admm, max_iter_dis));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_DisRFKQR_dis_grad", (DL_FUNC) &_DisRFKQR_dis_grad, 7},
    {"_DisRFKQR_ADMM", (DL_FUNC) &_DisRFKQR_ADMM, 10},
    {"_DisRFKQR_DKQR_RF", (DL_FUNC) &_DisRFKQR_DKQR_RF, 11},
    {NULL, NULL, 0}
};

RcppExport void R_init_DisRFKQR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
